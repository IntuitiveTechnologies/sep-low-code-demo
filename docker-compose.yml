version: '3.8'
services:
  db:
    image: postgres:14
    ports:
    - "3003:5432"
    restart: on-failure
    networks:
      - artemtech
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: password
      POSTGRES_DB: postgres
    volumes:
      - ./db/fixtures/entry:/docker-entrypoint-initdb.d
      - ./output:/output
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  graphql-engine:
    image: hasura/graphql-engine:v2.3.1.cli-migrations-v2
    volumes: # used for initial setup
      - "./hasura/metadata/:/hasura-metadata/"
      - "./hasura/migrations/:/hasura-migrations/"
    ports:
      - "8082:8080"
    depends_on:
      - "db"
    networks:
      - artemtech
    restart: on-failure
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@db/app
      HASURA_GRAPHQL_ADMIN_SECRET: J8qnFrYX84lf0eAzbyTE6LN6
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"_FNSZBHMNrDIOQWFxwg-jzgdlb4aKUZ9g18COh4OsUo"}'
  admin:
    image: motoradmin/motoradmin:0.2.56
    environment:
      SECRET_KEY_BASE: egr6j5MOr8QsOv2qbYisa1lrH4H1Ak4zedXIc52CCsYq6bBTlnqCtWb5q31xku7Q
      DATABASE_URL: postgres://postgres:postgres@db:5432/motoradmin
    networks:
      - artemtech
    depends_on:
      - db
    volumes:
      - './admin:/app'
    ports:
      - 3005:3000
    restart: on-failure
networks:
  artemtech:
    driver: bridge